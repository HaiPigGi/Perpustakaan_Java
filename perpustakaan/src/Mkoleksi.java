
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

public class Mkoleksi extends javax.swing.JDialog {

    private Connection con = null;
    private PreparedStatement pst = null;

    isiPerpus dtKoleksi;
    DefaultTableModel tModel;
    TableColumnModel cModel;

    public Mkoleksi(java.awt.Frame parent, boolean modal, isiPerpus dtKoleksi) {
        super(parent, modal);
        initComponents();
        this.dtKoleksi = dtKoleksi;

        bacaMaja.setSelected(true);
        tampilData();
    }

    private Mkoleksi() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Book = new javax.swing.JRadioButton();
        bacaMaja = new javax.swing.JRadioButton();
        CD = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        vlum = new javax.swing.JLabel();
        vlum3 = new javax.swing.JLabel();
        txID = new javax.swing.JTextField();
        txJudul = new javax.swing.JTextField();
        txPenerbit = new javax.swing.JTextField();
        txVolum = new javax.swing.JTextField();
        txIsbn = new javax.swing.JTextField();
        Tambah = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        vlum2 = new javax.swing.JLabel();
        txSeri = new javax.swing.JTextField();
        status = new javax.swing.JCheckBox();
        Keluar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Dtabel = new javax.swing.JTable();
        Hapus = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        buttonGroup1.add(Book);
        Book.setText("BUKU");
        Book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookActionPerformed(evt);
            }
        });

        buttonGroup1.add(bacaMaja);
        bacaMaja.setText("MAJALAH");
        bacaMaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bacaMajaActionPerformed(evt);
            }
        });

        buttonGroup1.add(CD);
        CD.setText("DISK");
        CD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CDActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel2.setText("Judul");

        jLabel3.setText("Penerbit");

        jLabel4.setText("Status ");

        vlum.setText("Volume");

        vlum3.setText("ISSBN");

        txID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txIDFocusLost(evt);
            }
        });
        txID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txIDActionPerformed(evt);
            }
        });

        txVolum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txVolumFocusLost(evt);
            }
        });
        txVolum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txVolumActionPerformed(evt);
            }
        });

        txIsbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txIsbnActionPerformed(evt);
            }
        });

        Tambah.setText("Tambah");
        Tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TambahActionPerformed(evt);
            }
        });

        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        vlum2.setText("Seri");

        txSeri.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txSeriFocusLost(evt);
            }
        });
        txSeri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txSeriActionPerformed(evt);
            }
        });

        status.setText("status Pinjam");
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });

        Keluar.setText("Keluar");
        Keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeluarActionPerformed(evt);
            }
        });

        Dtabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        Dtabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DtabelMouseClicked(evt);
            }
        });
        Dtabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DtabelKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(Dtabel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        Hapus.setText("Hapus");
        Hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(Book)
                .addGap(526, 526, 526)
                .addComponent(bacaMaja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CD)
                .addGap(417, 417, 417))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(172, 172, 172)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txPenerbit)
                                    .addComponent(txJudul)
                                    .addComponent(txID)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(211, 211, 211)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txSeri, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txVolum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(664, 664, 664))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vlum)
                            .addComponent(vlum2)
                            .addComponent(vlum3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(32, 32, 32)
                                .addComponent(status))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(Hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(Keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(316, 316, 316))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Book)
                            .addComponent(bacaMaja)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(CD)))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(status))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txVolum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vlum))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vlum2)
                    .addComponent(txSeri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vlum3)
                    .addComponent(txIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookActionPerformed
        // TODO add your handling code here:
        vlum.setText("Halaman");
        vlum2.setText("ISBN");
        vlum3.setVisible(false);
        txIsbn.setVisible(false);
        tampilData();
    }//GEN-LAST:event_BookActionPerformed

    private void bacaMajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bacaMajaActionPerformed
        // TODO add your handling code here:
        vlum.setText("Volume");
        vlum2.setText("Seri");

        tampilData();
    }//GEN-LAST:event_bacaMajaActionPerformed

    private void CDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CDActionPerformed
        // TODO add your handling code here:
        vlum.setText("Format");
        vlum2.setText("ISBN");
        vlum3.setVisible(false);
        txIsbn.setVisible(false);
        tampilData();
    }//GEN-LAST:event_CDActionPerformed

    private void txSeriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txSeriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txSeriActionPerformed

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    private void TambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TambahActionPerformed
        String xIdK = txID.getText();
        String xJudul = txJudul.getText();
        String xPenerbit = txPenerbit.getText();
        Boolean xStatus = status.isSelected();
        String xFormat = "";
        String xIsbn = "";
        int xVolume = 0;
        int xSeri = 0;
        int xHalaman = 0;
        Koleksi kolek = null;
        if (CD.isSelected()) {

            try {
                xFormat = txVolum.getText();
                xIsbn = txSeri.getText();
                kolek = new Disk(xIdK, xJudul, xPenerbit, xStatus, xFormat, xIsbn);

                String insert = "INSERT INTO CD (ID_D,JUDUL_D,PENERBIT_D,FORMAT_D,ISBN_D) VALUES (?,?,?,?,?)";
                con = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xepdb1", "hr", "hr");

                pst = con.prepareStatement(insert);

                pst.setString(1, xIdK);
                pst.setString(2, xJudul);
                pst.setString(3, xPenerbit);
                pst.setString(4, xFormat);
                pst.setString(5, xIsbn);

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Success");
                clrInput();
            } catch (Exception ex) {
                Logger.getLogger(Borrow.class.getName()).log(Level.SEVERE, "Data Tidak Masuk di Database", ex);
            }
        }
        if (bacaMaja.isSelected()) {
            try {
                xVolume = Integer.parseInt(txVolum.getText());
                xSeri = Integer.parseInt(txSeri.getText());
                xIsbn = txIsbn.getText();
                kolek = new majalah(xIdK, xJudul, xPenerbit, xStatus, xVolume, xSeri, xIsbn);
                String insert = "INSERT INTO MAJALAH (ID_M,JUDUL_M,PENERBIT_M,VOLUME_M,SERI_M,ISSN_M) VALUES (?,?,?,?,?,?)";
                con = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xepdb1", "hr", "hr");

                pst = con.prepareStatement(insert);

                pst.setString(1, xIdK);
                pst.setString(2, xJudul);
                pst.setString(3, xPenerbit);
                pst.setInt(4, xVolume);
                pst.setInt(5, xSeri);
                pst.setString(6, xIsbn);

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Success");
                clrInput();
            } catch (Exception ex) {
                Logger.getLogger(Borrow.class.getName()).log(Level.SEVERE, "Data Tidak Masuk di Database", ex);
            }
        }
        if (Book.isSelected()) {
            try {
                xHalaman = Integer.parseInt(txVolum.getText());
                xIsbn = txSeri.getText();
                kolek = new Buku(xIdK, xJudul, xPenerbit, xStatus, xHalaman, xIsbn);

                String insert = "INSERT INTO BOOK (ID_B,JUDUL_B,PENERBIT_B,HALAMAN_B,ISBN_B) VALUES (?,?,?,?,?)";
                con = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xepdb1", "hr", "hr");

                pst = con.prepareStatement(insert);

                pst.setString(1, xIdK);
                pst.setString(2, xJudul);
                pst.setString(3, xPenerbit);
                pst.setInt(4, xHalaman);
                pst.setString(5, xIsbn);

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Success");
                clrInput();
            } catch (Exception ex) {
                Logger.getLogger(Borrow.class.getName()).log(Level.SEVERE, "Data Tidak Masuk di Database", ex);
            }
        }
        dtKoleksi.isiDataKoleksi(kolek);
        tampilData();
        clrInput();
        // TODO add your handling code here:
    }//GEN-LAST:event_TambahActionPerformed

    private void KeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeluarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_KeluarActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
        clrInput();
    }//GEN-LAST:event_ResetActionPerformed

    private void txVolumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txVolumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txVolumActionPerformed

    private void DtabelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DtabelKeyPressed
        // TODO add your handling code here:
        int selectedRow = Dtabel.getSelectedRow();
        Koleksi a = SearchingKolek(tModel.getValueAt(selectedRow, 0).toString());
        char tipe = a.getId_Koleksi().charAt(0);
        txID.setText(a.getId_Koleksi());
        txJudul.setText(a.getJudul());
        txPenerbit.setText(a.getPenerbit());
        status.setSelected(a.getStatuc_peminjam());

        switch (tipe) {
            case 'D':
                CD.setSelected(Boolean.TRUE);
                vlum.setText("Format");
                vlum2.setText("ISBN");
                vlum3.setVisible(false);
                txIsbn.setVisible(false);
                txVolum.setText(((Disk) a).getFormat());
                txSeri.setText(((Disk) a).getIsbn());
                break;
            case 'M':
                bacaMaja.setSelected(Boolean.TRUE);
                vlum.setText("Volume");
                vlum2.setText("ISSN");
                vlum3.setVisible(true);
                txIsbn.setVisible(true);
                txVolum.setText(Integer.toString(((majalah) a).getVolume()));
                txSeri.setText(Integer.toString(((majalah) a).getSeri()));
                txIsbn.setText(((majalah) a).getIssn());
                break;
            case 'B':
                Book.setSelected(Boolean.TRUE);
                vlum.setText("Halaman");
                vlum2.setText("ISBN");
                vlum3.setVisible(false);
                txIsbn.setVisible(false);
                txVolum.setText(Integer.toString(((Buku) a).getHalaman()));
                txSeri.setText(((Buku) a).getIsbn());
                break;
            default:
                JOptionPane.showMessageDialog(this, "ID Koleksi tidak ada", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_DtabelKeyPressed

    private void txIsbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txIsbnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txIsbnActionPerformed

    private void txSeriFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txSeriFocusLost
        // TODO add your handling code here:
        if (txSeri.getText().isEmpty()) {
            return;
        }
        {
            String cek = txSeri.getText();
            if (bacaMaja.isSelected()) {
                if (!cek.matches("[0-9]+")) {
                    try {
                        throw new Exception("ISSN harus berupa angka");
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
            }

        }
        if (txSeri.getText().isEmpty()) {
            return;
        }
        {
            String cek2 = txSeri.getText();
            if (Book.isSelected()) {
                if (!cek2.matches("[0-9]+")) {
                    try {
                        throw new Exception("ISBN Harus berupa angka");
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
            }
        }
        if (txSeri.getText().isEmpty()) {
            return;
        }
        {
            String cek3 = txSeri.getText();
            if (CD.isSelected()) {
                if (!cek3.matches("[0-9]+")) {
                    try {
                        throw new Exception("ISBN Harus berupa angka");
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
            }
        }
    }//GEN-LAST:event_txSeriFocusLost

    private void txVolumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txVolumFocusLost
        // TODO add your handling code here:
        if (txVolum.getText().isEmpty()) {
            return;
        }
        {
            String cek = txVolum.getText();
            if (Book.isSelected()) {
                if (!cek.matches("[0-9]+")) {
                    try {
                        throw new Exception("Jumlah Halaman harus berupa angka");
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }

                }
            }
        }
        if (txVolum.getText().isEmpty()) {
            return;
        }
        {
            String cek2 = txVolum.getText();
            if (bacaMaja.isSelected()) {
                if (!cek2.matches("[0-9]+")) {
                    try {
                        throw new Exception("Jumlah Volume harus berupa angka");
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }

                }

            }
        }
        if (txVolum.getText().isEmpty()) {
            return;
        }
        {
            String cek3 = txVolum.getText();
            if (CD.isSelected()) {
                if (!cek3.matches("^(Audio|Video|Document)*")) {
                    // || JTFKar1.getText()!= "Audio" || JTFKar1.getText()!= "Video" || JTFKar1.getText()!= "Document"
                    try {
                        throw new Exception("Pilihan Format Disk yaitu berupa :"
                                + "\n Audio"
                                + "\n Video"
                                + "\n Document");
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
        }

    }//GEN-LAST:event_txVolumFocusLost

    private void txIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txIDFocusLost
        // TODO add your handling code here:
        if (txID.getText().isEmpty()) {
            return;
        }

        String cek = txID.getText();
        if (!cek.matches("^[M|D|B][\\d+].*")) {
            try {
                txID.setText("");
                throw new Exception("ID harus diawali dengan huruf \n B {untuk Book) atau M (untuk Majalah) atau D (untuk Disk) \n dan kemudian diikuti dengan angka \n \n Contoh : M3334 bukan 3334M");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_txIDFocusLost

    private void txIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txIDActionPerformed

    }//GEN-LAST:event_txIDActionPerformed

    private void DtabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DtabelMouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        txID.setText(tModel.getValueAt(selectedRow, 0).toString());
        txJudul.setText(tModel.getValueAt(selectedRow, 1).toString());
        txVolum.setText(tModel.getValueAt(selectedRow, 2).toString());
        txSeri.setText(tModel.getValueAt(selectedRow, 3).toString());
        txIsbn.setText(tModel.getValueAt(selectedRow, 4).toString());
    }//GEN-LAST:event_DtabelMouseClicked

    private void HapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusActionPerformed
        // TODO add your handling code here:
        int a = jTable1.getSelectedRow();
        if (a == -1) {
        } else {
            dtKoleksi.koleksiList.remove(a);
        }
        tampilData();
    }//GEN-LAST:event_HapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mkoleksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mkoleksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mkoleksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mkoleksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    public void tampilData() {
        String a = "";
        String[] kolom = {"Id Koleksi", "Judul", "Penerbit", "Status", "ISBN/ISSN"};
        Object[][] list = new Object[dtKoleksi.koleksiList.size()][5]; // 6 merupakan jumlah kolom
        int i = 0;
        for (Koleksi n : dtKoleksi.koleksiList) {
            if (n instanceof Disk) {
                a = ((Disk) n).getIsbn();
            }
            if (n instanceof majalah) {
                a = ((majalah) n).getIssn();
            }
            if (n instanceof Buku) {
                a = ((Buku) n).getIsbn();
            }
            list[i] = new String[]{n.getId_Koleksi(), n.getJudul(), n.getPenerbit(), n.getStatuc_peminjam() ? "Dipinjam" : "Tersedia", a};
            i++;
        }
        tModel = new DefaultTableModel(list, kolom) {
            @Override
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        Dtabel.setModel(tModel);
        cModel = Dtabel.getColumnModel();
        cModel.getColumn(0).setPreferredWidth(30);
        cModel.getColumn(1).setPreferredWidth(50);
        cModel.getColumn(2).setPreferredWidth(150);
        cModel.getColumn(3).setPreferredWidth(300);
        cModel.getColumn(4).setPreferredWidth(30);

    }

    private Koleksi SearchingKolek(String idKoleksi) {
        Iterator<Koleksi> iterator = dtKoleksi.koleksiList.iterator();
        while (iterator.hasNext()) {
            Koleksi koleksi = iterator.next();
            if (koleksi.getId_Koleksi().equals(idKoleksi)) {
                return koleksi;
            }
        }
        return null;
    }

    private void clrInput() {
        txID.setText("");
        txJudul.setText("");
        txPenerbit.setText("");
        txID.requestFocus();
        status.setSelected(Boolean.FALSE);
        txVolum.setText("");
        txSeri.setText("");
        txIsbn.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Book;
    private javax.swing.JRadioButton CD;
    private javax.swing.JTable Dtabel;
    private javax.swing.JButton Hapus;
    private javax.swing.JButton Keluar;
    private javax.swing.JButton Reset;
    private javax.swing.JButton Tambah;
    private javax.swing.JRadioButton bacaMaja;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JCheckBox status;
    private javax.swing.JTextField txID;
    private javax.swing.JTextField txIsbn;
    private javax.swing.JTextField txJudul;
    private javax.swing.JTextField txPenerbit;
    private javax.swing.JTextField txSeri;
    private javax.swing.JTextField txVolum;
    private javax.swing.JLabel vlum;
    private javax.swing.JLabel vlum2;
    private javax.swing.JLabel vlum3;
    // End of variables declaration//GEN-END:variables
}
